// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieCard component MovieCard snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="makeStyles-cardWrapper-8 makeStyles-cardWrapper-14 MuiBox-root css-0"
      >
        <img
          class="makeStyles-cardImage-9 MuiBox-root css-0"
          src="https://kinopoiskapiunofficial.tech/images/posters/kp/328.jpg"
        />
        <div
          class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 makeStyles-highRating-11 css-1ps6pg7-MuiPaper-root"
          data-testid="movie-card-rating"
        >
          8
        </div>
      </div>
      <p
        class="MuiTypography-root MuiTypography-body1 makeStyles-title-12 css-ahj2mt-MuiTypography-root"
        data-testid="movie-card-title"
      >
        MovieTitle
      </p>
      <div
        class="css-nen11g-MuiStack-root"
      >
        <p
          class="MuiTypography-root MuiTypography-body1 makeStyles-genre-13 css-ahj2mt-MuiTypography-root"
          data-testid="movie-card-genre"
        >
          Genre
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="makeStyles-cardWrapper-8 makeStyles-cardWrapper-14 MuiBox-root css-0"
    >
      <img
        class="makeStyles-cardImage-9 MuiBox-root css-0"
        src="https://kinopoiskapiunofficial.tech/images/posters/kp/328.jpg"
      />
      <div
        class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 makeStyles-highRating-11 css-1ps6pg7-MuiPaper-root"
        data-testid="movie-card-rating"
      >
        8
      </div>
    </div>
    <p
      class="MuiTypography-root MuiTypography-body1 makeStyles-title-12 css-ahj2mt-MuiTypography-root"
      data-testid="movie-card-title"
    >
      MovieTitle
    </p>
    <div
      class="css-nen11g-MuiStack-root"
    >
      <p
        class="MuiTypography-root MuiTypography-body1 makeStyles-genre-13 css-ahj2mt-MuiTypography-root"
        data-testid="movie-card-genre"
      >
        Genre
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
